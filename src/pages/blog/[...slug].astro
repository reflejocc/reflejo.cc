---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
interface Props {
  entry: CollectionEntry<"blog">;
}
export async function getStaticPaths() {
  const blog = await getCollection("blog");
  return blog.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout
  title={entry.data.title}
  description={entry.data.description}
  keywords={entry.data.tags?.join(", ")}
>
  <div class="page page-content">
    <!-- Blog -->
    <section class="p-article">
      <div class="container p-article-container">
        <div class="p-article-hero">
          <div class="p-article-hero__figure col-12 col-sm-5 col-md-5 col-lg-5">
            <div class="p-article-hero__figure-abs">
              <img
                src={entry.data.cover}
                alt={entry.data.coverAlt}
                class="p-article-hero__figure-img abs full cover"
              />
            </div>
          </div>
          <div
            class="p-article-hero__title col-12 col-sm-6 col-md-6 col-lg-6 p-0"
          >
            <div class="p-article-hero__title-inner col-12 col-md-10 p-0">
              <div class="p-article-hero__date xs">
                ({entry.data.publishDate.toISOString().slice(0, 10)})
              </div>
              <h1 class="p-article-hero__heading l">
                {entry.data.title}
              </h1>
              <div class="p-article-hero__reading xxs">
                {
                  entry.data.read && (
                    <div class="p-article-hero__reading xxs">
                      ({entry.data.read} min) Read{" "}
                    </div>
                  )
                }
              </div>
            </div>
          </div>
        </div>

        <div class="p-article-content">
          <Content />
        </div>
      </div>
    </section>
  </div>
</Layout>
