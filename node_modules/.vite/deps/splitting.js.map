{
  "version": 3,
  "sources": ["../../splitting/dist/splitting.js"],
  "sourcesContent": ["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Splitting = factory());\n}(this, (function () { 'use strict';\n\nvar root = document;\nvar createText = root.createTextNode.bind(root);\n\n/**\n * # setProperty\n * Apply a CSS var\n * @param {HTMLElement} el\n * @param {string} varName \n * @param {string|number} value \n */\nfunction setProperty(el, varName, value) {\n    el.style.setProperty(varName, value);\n} \n\n/**\n * \n * @param {!HTMLElement} el \n * @param {!HTMLElement} child \n */\nfunction appendChild(el, child) {\n  return el.appendChild(child);\n}\n\n/**\n * \n * @param {!HTMLElement} parent \n * @param {string} key \n * @param {string} text \n * @param {boolean} whitespace \n */\nfunction createElement(parent, key, text, whitespace) {\n  var el = root.createElement('span');\n  key && (el.className = key); \n  if (text) { \n      !whitespace && el.setAttribute(\"data-\" + key, text);\n      el.textContent = text; \n  }\n  return (parent && appendChild(parent, el)) || el;\n}\n\n/**\n * \n * @param {!HTMLElement} el \n * @param {string} key \n */\nfunction getData(el, key) {\n  return el.getAttribute(\"data-\" + key)\n}\n\n/**\n * \n * @param {import('../types').Target} e \n * @param {!HTMLElement} parent\n * @returns {!Array<!HTMLElement>}\n */\nfunction $(e, parent) {\n    return !e || e.length == 0\n        ? // null or empty string returns empty array\n          []\n        : e.nodeName\n            ? // a single element is wrapped in an array\n              [e]\n            : // selector and NodeList are converted to Element[]\n              [].slice.call(e[0].nodeName ? e : (parent || root).querySelectorAll(e));\n}\n\n/**\n * Creates and fills an array with the value provided\n * @param {number} len\n * @param {() => T} valueProvider\n * @return {T}\n * @template T\n */\nfunction Array2D(len) {\n    var a = [];\n    for (; len--; ) {\n        a[len] = [];\n    }\n    return a;\n}\n\n/**\n * A for loop wrapper used to reduce js minified size.\n * @param {!Array<T>} items \n * @param {function(T):void} consumer\n * @template T\n */\nfunction each(items, consumer) {\n    items && items.some(consumer);\n}\n\n/**\n * @param {T} obj \n * @return {function(string):*}\n * @template T\n */\nfunction selectFrom(obj) {\n    return function (key) {\n        return obj[key];\n    }\n}\n\n/**\n * # Splitting.index\n * Index split elements and add them to a Splitting instance.\n *\n * @param {HTMLElement} element\n * @param {string} key \n * @param {!Array<!HTMLElement> | !Array<!Array<!HTMLElement>>} items \n */\nfunction index(element, key, items) {\n    var prefix = '--' + key;\n    var cssVar = prefix + \"-index\";\n\n    each(items, function (items, i) {\n        if (Array.isArray(items)) {\n            each(items, function(item) {\n                setProperty(item, cssVar, i);\n            });\n        } else {\n            setProperty(items, cssVar, i);\n        }\n    });\n\n    setProperty(element, prefix + \"-total\", items.length);\n}\n\n/**\n * @type {Record<string, import('./types').ISplittingPlugin>}\n */\nvar plugins = {};\n\n/**\n * @param {string} by\n * @param {string} parent\n * @param {!Array<string>} deps\n * @return {!Array<string>}\n */\nfunction resolvePlugins(by, parent, deps) {\n    // skip if already visited this dependency\n    var index = deps.indexOf(by);\n    if (index == -1) {\n        // if new to dependency array, add to the beginning\n        deps.unshift(by);\n\n        // recursively call this function for all dependencies\n        var plugin = plugins[by];\n        if (!plugin) {\n            throw new Error(\"plugin not loaded: \" + by);\n        }\n        each(plugin.depends, function(p) {\n            resolvePlugins(p, by, deps);\n        });\n    } else {\n        // if this dependency was added already move to the left of\n        // the parent dependency so it gets loaded in order\n        var indexOfParent = deps.indexOf(parent);\n        deps.splice(index, 1);\n        deps.splice(indexOfParent, 0, by);\n    }\n    return deps;\n}\n\n/**\n * Internal utility for creating plugins... essentially to reduce\n * the size of the library\n * @param {string} by \n * @param {string} key \n * @param {string[]} depends \n * @param {Function} split \n * @returns {import('./types').ISplittingPlugin}\n */\nfunction createPlugin(by, depends, key, split) {\n    return {\n        by: by,\n        depends: depends,\n        key: key,\n        split: split\n    }\n}\n\n/**\n *\n * @param {string} by\n * @returns {import('./types').ISplittingPlugin[]}\n */\nfunction resolve(by) {\n    return resolvePlugins(by, 0, []).map(selectFrom(plugins));\n}\n\n/**\n * Adds a new plugin to splitting\n * @param {import('./types').ISplittingPlugin} opts\n */\nfunction add(opts) {\n    plugins[opts.by] = opts;\n}\n\n/**\n * # Splitting.split\n * Split an element's textContent into individual elements\n * @param {!HTMLElement} el  Element to split\n * @param {string} key \n * @param {string} splitOn \n * @param {boolean} includePrevious \n * @param {boolean} preserveWhitespace\n * @return {!Array<!HTMLElement>}\n */\nfunction splitText(el, key, splitOn, includePrevious, preserveWhitespace) {\n    // Combine any strange text nodes or empty whitespace.\n    el.normalize();\n\n    // Use fragment to prevent unnecessary DOM thrashing.\n    var elements = [];\n    var F = document.createDocumentFragment();\n\n    if (includePrevious) {\n        elements.push(el.previousSibling);\n    }\n\n    var allElements = [];\n    $(el.childNodes).some(function(next) {\n        if (next.tagName && !next.hasChildNodes()) {\n            // keep elements without child nodes (no text and no children)\n            allElements.push(next);\n            return;\n        }\n        // Recursively run through child nodes\n        if (next.childNodes && next.childNodes.length) {\n            allElements.push(next);\n            elements.push.apply(elements, splitText(next, key, splitOn, includePrevious, preserveWhitespace));\n            return;\n        }\n\n        // Get the text to split, trimming out the whitespace\n        /** @type {string} */\n        var wholeText = next.wholeText || '';\n        var contents = wholeText.trim();\n\n        // If there's no text left after trimming whitespace, continue the loop\n        if (contents.length) {\n            // insert leading space if there was one\n            if (wholeText[0] === ' ') {\n                allElements.push(createText(' '));\n            }\n            // Concatenate the split text children back into the full array\n            var useSegmenter = splitOn === \"\" && typeof Intl.Segmenter === \"function\";\n            each(useSegmenter ? Array.from(new Intl.Segmenter().segment(contents)).map(function(x){return x.segment}) : contents.split(splitOn), function (splitText, i) {\n                if (i && preserveWhitespace) {\n                    allElements.push(createElement(F, \"whitespace\", \" \", preserveWhitespace));\n                }\n                var splitEl = createElement(F, key, splitText);\n                elements.push(splitEl);\n                allElements.push(splitEl);\n            }); \n            // insert trailing space if there was one\n            if (wholeText[wholeText.length - 1] === ' ') {\n                allElements.push(createText(' '));\n            }\n        }\n    });\n\n    each(allElements, function(el) {\n        appendChild(F, el);\n    });\n\n    // Clear out the existing element\n    el.innerHTML = \"\";\n    appendChild(el, F);\n    return elements;\n}\n\n/** an empty value */\nvar _ = 0;\n\nfunction copy(dest, src) {\n    for (var k in src) {\n        dest[k] = src[k];\n    }\n    return dest;\n}\n\nvar WORDS = 'words';\n\nvar wordPlugin = createPlugin(\n    /* by= */ WORDS,\n    /* depends= */ _,\n    /* key= */ 'word', \n    /* split= */ function(el) {\n        return splitText(el, 'word', /\\s+/, 0, 1)\n    }\n);\n\nvar CHARS = \"chars\";\n\nvar charPlugin = createPlugin(\n    /* by= */ CHARS,\n    /* depends= */ [WORDS],\n    /* key= */ \"char\", \n    /* split= */ function(el, options, ctx) {\n        var results = [];\n\n        each(ctx[WORDS], function(word, i) {\n            results.push.apply(results, splitText(word, \"char\", \"\", options.whitespace && i));\n        });\n\n        return results;\n    }\n);\n\n/**\n * # Splitting\n * \n * @param {import('./types').ISplittingOptions} opts\n * @return {!Array<*>}\n */\nfunction Splitting (opts) {\n  opts = opts || {};\n  var key = opts.key;\n\n  return $(opts.target || '[data-splitting]').map(function(el) {\n    var ctx = el['üçå'];  \n    if (!opts.force && ctx) {\n      return ctx;\n    }\n\n    ctx = el['üçå'] = { el: el };\n    var by = opts.by || getData(el, 'splitting');\n    if (!by || by == 'true') {\n      by = CHARS;\n    }\n    var items = resolve(by);\n    var opts2 = copy({}, opts);\n    each(items, function(plugin) {\n      if (plugin.split) {\n        var pluginBy = plugin.by;\n        var key2 = (key ? '-' + key : '') + plugin.key;\n        var results = plugin.split(el, opts2, ctx);\n        key2 && index(el, key2, results);\n        ctx[pluginBy] = results;\n        el.classList.add(pluginBy);\n      } \n    });\n\n    el.classList.add('splitting');\n    return ctx;\n  })\n}\n\n/**\n * # Splitting.html\n * \n * @param {import('./types').ISplittingOptions} opts\n */\nfunction html(opts) {\n  opts = opts || {};\n  var parent = opts.target =  createElement();\n  parent.innerHTML = opts.content;\n  Splitting(opts);\n  return parent.outerHTML\n}\n\nSplitting.html = html;\nSplitting.add = add;\n\n/**\n * Detects the grid by measuring which elements align to a side of it.\n * @param {!HTMLElement} el \n * @param {import('../core/types').ISplittingOptions} options\n * @param {*} side \n */\nfunction detectGrid(el, options, side) {\n    var items = $(options.matching || el.children, el);\n    var c = {};\n\n    each(items, function(w) {\n        var val = Math.round(w[side]);\n        (c[val] || (c[val] = [])).push(w);\n    });\n\n    return Object.keys(c).map(Number).sort(byNumber).map(selectFrom(c));\n}\n\n/**\n * Sorting function for numbers.\n * @param {number} a \n * @param {number} b\n * @return {number} \n */\nfunction byNumber(a, b) {\n    return a - b;\n}\n\nvar linePlugin = createPlugin(\n    /* by= */ 'lines',\n    /* depends= */ [WORDS],\n    /* key= */ 'line',\n    /* split= */ function(el, options, ctx) {\n      return detectGrid(el, { matching: ctx[WORDS] }, 'offsetTop')\n    }\n);\n\nvar itemPlugin = createPlugin(\n    /* by= */ 'items',\n    /* depends= */ _,\n    /* key= */ 'item', \n    /* split= */ function(el, options) {\n        return $(options.matching || el.children, el)\n    }\n);\n\nvar rowPlugin = createPlugin(\n    /* by= */ 'rows',\n    /* depends= */ _,\n    /* key= */ 'row', \n    /* split= */ function(el, options) {\n        return detectGrid(el, options, \"offsetTop\");\n    }\n);\n\nvar columnPlugin = createPlugin(\n    /* by= */ 'cols',\n    /* depends= */ _,\n    /* key= */ \"col\", \n    /* split= */ function(el, options) {\n        return detectGrid(el, options, \"offsetLeft\");\n    }\n);\n\nvar gridPlugin = createPlugin(\n    /* by= */ 'grid',\n    /* depends= */ ['rows', 'cols']\n);\n\nvar LAYOUT = \"layout\";\n\nvar layoutPlugin = createPlugin(\n    /* by= */ LAYOUT,\n    /* depends= */ _,\n    /* key= */ _,\n    /* split= */ function(el, opts) {\n        // detect and set options\n        var rows =  opts.rows = +(opts.rows || getData(el, 'rows') || 1);\n        var columns = opts.columns = +(opts.columns || getData(el, 'columns') || 1);\n\n        // Seek out the first <img> if the value is true \n        opts.image = opts.image || getData(el, 'image') || el.currentSrc || el.src;\n        if (opts.image) {\n            var img = $(\"img\", el)[0];\n            opts.image = img && (img.currentSrc || img.src);\n        }\n\n        // add optional image to background\n        if (opts.image) {\n            setProperty(el, \"background-image\", \"url(\" + opts.image + \")\");\n        }\n\n        var totalCells = rows * columns;\n        var elements = [];\n\n        var container = createElement(_, \"cell-grid\");\n        while (totalCells--) {\n            // Create a span\n            var cell = createElement(container, \"cell\");\n            createElement(cell, \"cell-inner\");\n            elements.push(cell);\n        }\n\n        // Append elements back into the parent\n        appendChild(el, container);\n\n        return elements;\n    }\n);\n\nvar cellRowPlugin = createPlugin(\n    /* by= */ \"cellRows\",\n    /* depends= */ [LAYOUT],\n    /* key= */ \"row\",\n    /* split= */ function(el, opts, ctx) {\n        var rowCount = opts.rows;\n        var result = Array2D(rowCount);\n\n        each(ctx[LAYOUT], function(cell, i, src) {\n            result[Math.floor(i / (src.length / rowCount))].push(cell);\n        });\n\n        return result;\n    }\n);\n\nvar cellColumnPlugin = createPlugin(\n    /* by= */ \"cellColumns\",\n    /* depends= */ [LAYOUT],\n    /* key= */ \"col\",\n    /* split= */ function(el, opts, ctx) {\n        var columnCount = opts.columns;\n        var result = Array2D(columnCount);\n\n        each(ctx[LAYOUT], function(cell, i) {\n            result[i % columnCount].push(cell);\n        });\n\n        return result;\n    }\n);\n\nvar cellPlugin = createPlugin(\n    /* by= */ \"cells\",\n    /* depends= */ ['cellRows', 'cellColumns'],\n    /* key= */ \"cell\", \n    /* split= */ function(el, opt, ctx) { \n        // re-index the layout as the cells\n        return ctx[LAYOUT];\n    }\n);\n\n// install plugins\n// word/char plugins\nadd(wordPlugin);\nadd(charPlugin);\nadd(linePlugin);\n// grid plugins\nadd(itemPlugin);\nadd(rowPlugin);\nadd(columnPlugin);\nadd(gridPlugin);\n// cell-layout plugins\nadd(layoutPlugin);\nadd(cellRowPlugin);\nadd(cellColumnPlugin);\nadd(cellPlugin);\n\nreturn Splitting;\n\n})));\n"],
  "mappings": "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",
  "names": ["items", "index", "splitText", "el"]
}
